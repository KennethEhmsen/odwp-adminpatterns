<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @global \com\ondrejd\adminpatterns\Plugin $odwpap_plugin
 */
global $odwpap_plugin;

/**
 * @var string
 */
$display_description = (bool) $odwpap_plugin->get_option( 'display_detail_description' );

?><div class="wrap">

	<?php screen_icon(); ?>

	<h2>
		Tables
		<small>Generator for table list classes using <code><a href="https://developer.wordpress.org/reference/classes/wp_list_table/" target="blank">WP_List_Table</a></code>.
	</h2>

	<!--
	<div class="wp-pattern-example">
		<p><?php printf(
			'If you want list some data in your plugin you need to implement new class that extends <a href="%1$s" target="blank"><code>WP_List_Table</code></a>. It is not complicated task and we show it here using simple wizard that generates all neccessary code.',
			'' 
		); ?></p>
	</div>
	-->

	<!--
	<h3>Table List Wizard</h3>
	-->

	<form id="list_table-wizard">
		<table class="form-table">
			<tbody>
				<!-- Class name -->
				<tr>
					<th scope="row">
						<label for="plugin-classname">Class name</label>
					</th>
					<td>
						<input type="text" name="classname" id="plugin-classname" class="regular-text" placeholder="My_Examples_List">
						<?php if ( $display_description === true ): ?>
                        <p id="classname_description" class="description">Name of the PHP class that will be generated, e.g. <code>My_Examples_List</code>.</p>
						<?php endif;?>
					</td>
				</tr>
				<!-- WP_List_Table Arguments -->
				<tr>
					<th scope="row">
						<label for="plugin-arguments">Arguments</label>
					</th>
					<td>
						<p class="description">Arguments for <a href="https://developer.wordpress.org/reference/classes/wp_list_table/__construct/" target="blank">constructor</a> of <code>WP_List_Table</code> class.</p>
						<fieldset>
							<label for="plugin-set_plural">
								<input type="checkbox" name="plugin-set_plural" id="plugin-set_plural">
								Plural label:
								<input type="text" name="plural" id="plugin-plural" placeholder="examples">
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="set_plural_description" class="description">Plural value used for labels and the objects being listed. This affects things such as CSS class-names and nonces used in the list table, e.g. <code>posts</code>. Default empty.</p>
							<?php endif;?>
							<label for="plugin-set_singular">
								<input type="checkbox" name="plugin-set_singular" id="plugin-set_singular">
								Singular label:
								<input type="text" name="singular" id="plugin-singular" placeholder="example">
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="set_singular_description" class="description">Singular label for an object being listed, e.g. \'post\'. Default empty.</p>
							<?php endif;?>
							<label for="plugin-use_ajax">
								<input type="checkbox" name="use_ajax" id="plugin-use_ajax">
								Use AJAX?
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="use_ajax_description" class="description">
								Whether the list table supports <em>AJAX</em>. This includes loading and sorting data, for example. If true, the class will call the <code><a href="https://developer.wordpress.org/reference/classes/wp_list_table/_js_vars/" target="blank">_js_vars()</a></code> method  in the footer to provide variables to any scripts handling AJAX events. Default <code>FALSE</code>.
							<?php endif;?>
							</p>
							<label for="plugin-set_screen">
								<input type="checkbox" name="plugin-set_screen" id="plugin-set_screen">
								Screen:
								<input type="text" name="screen" id="plugin-screen" placeholder="example">
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="set_screen_description" class="description">String containing the hook name used to determine the current screen. If left null, the current screen will be automatically set. Default null.</p>
							<?php endif;?>
						</fieldset>
					</td>
				</tr>
				<!-- Other options -->
				<tr>
					<th scope="row">
						<label for="plugin-options">Options</label>
					</th>
					<td>
						<fieldset id="plugin-options">
							<label for="plugin-searchbox">
								<input type="checkbox" name="searchbox" id="plugin-searchbox">
								Add search box?
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="searchbox_description" class="description">
								<code>XXX</code> Add detail description (with screenshot)!</p>
							<?php endif;?>

							<label for="plugin-custom_filter">
								<input type="checkbox" name="custom_filter" id="plugin-custom_filter">
								Add custom filter?
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="custom_filter_description" class="description">
								<code>XXX</code> Add detail description (with screenshot)!</p>
							<?php endif;?>
						</fieldset>
					</td>
				</tr>
				<!-- Views -->
				<tr>
					<th scope="row">
						<label for="plugin-use_views">Views</label>
					</th>
					<td>
						<fieldset>
							<label for="plugin-use_views">
								<input type="checkbox" name="plugin-use_views" id="plugin-use_views">
								Use custom views?
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="use_views_description" class="description">
								<code>XXX</code> Add detail description (with screenshot)!</p>
							<?php endif;?>
							<div id="use_views_area" class="wp-pattern-example" style="width: 100%; max-width: 500px;">
								<p class="description">Enter as many views you want. Both `key` and `label` fields are required.</p>
								<table style="width: 100%; max-width: 500px;" class="condensed">
									<thead>
										<tr>
											<th style="width: 40%;">Key</th>
											<th style="width: 40%;">Label</th>
											<th style="width: 20%;"> </th>
										</tr>
									</thead>
									<tbody>
										<!-- TODO Render existing views here! -->
										<tr>
											<td><b>all</b></td>
											<td>All</td>
											<td><input type="button" value="Remove" class="button-secondary"></td>
										</tr>
										<tr>
											<td><b>deleted</b></td>
											<td>Deleted</td>
											<td><input type="button" value="Remove" class="button-secondary"></td>
										</tr>
									</tbody>
									<tfoot>
										<tr>
											<td>
												<input type="text" name="plugin-new_view_key" id="plugin-new_view_key" class="regular-text" placeholder="Enter view key" style="width: 100%;">
											</td>
											<td>
												<input type="text" name="plugin-new_view_label" id="plugin-new_view_label" class="regular-text" placeholder="Enter view label" style="width: 100%;">
											</td>
											<td><input type="button" name="plugin-add_view" value="Add view" class="button-primary"></td>
										</tr>
									</tfoot>
								</table>
							</div>
						</fieldset>
					</td>
				</tr>
				<!-- Bulk actions -->
				<tr>
					<th scope="row">
						<label for="plugin-use_bulkactions">Bulk actions</label>
					</th>
					<td>
						<fieldset>
							<label for="plugin-use_bulkactions">
								<input type="checkbox" name="plugin-use_bulkactions" id="plugin-use_bulkactions">
								Use bulk actions?
							</label>
							<?php if ( $display_description === true ): ?>
							<p id="use_bulkactions_description" class="description">
								<code>XXX</code> Add detail description (with screenshot)!</p>
							<?php endif;?>
							<div id="use_bulkactions_area" class="wp-pattern-example" style="width: 100%; max-width: 500px;">
								<p class="description">Enter as many actions you want. Both `key` and `label` fields are required.</p>
								<table style="width: 100%; max-width: 500px;">
									<thead>
										<tr>
											<th style="width: 40%;">Key</th>
											<th style="width: 40%;">Label</th>
											<th style="width: 20%;"> </th>
										</tr>
									</thead>
									<tbody>
										<!-- TODO Render existing actions here! -->
										<tr>
											<td><b>trash</b></td>
											<td>Trash</td>
											<td><input type="button" value="Remove" class="button-secondary"></td>
										</tr>
									</tbody>
									<tfoot>
										<tr>
											<td>
												<input type="text" name="plugin-new_bulkaction_key" id="plugin-new_bulkaction_key" class="regular-text" placeholder="Enter bulk action key" style="width: 100%;">
											</td>
											<td>
												<input type="text" name="plugin-new_bulkaction_label" id="plugin-new_bulkaction_label" class="regular-text" placeholder="Enter bulk action label" style="width: 100%;">
											</td>
											<td><input type="button" name="plugin-add_bulkaction" value="Add bulk action" class="button-primary"></td>
										</tr>
									</tfoot>
								</table>
							</div>
						</fieldset>
					</td>
				</tr>
				<!-- Data source -->
				<tr>
					<th scope="row">
						<label for="plugin-ds_php_source">Data source</label>
					</th>
					<td>
						<fieldset>
							<legend class="screen-reader-text">
								<span>Data source</span>
							</legend>
							<label for="plugin-ds_php_source">
								<input type="radio" name="plugin-datasource" id="plugin-ds_php_source">
								PHP source
							</label><br>
							<label for="plugin-ds_wp_data">
								<input type="radio" name="plugin-datasource" id="plugin-ds_wp_data">
								Query for WordPress data
							</label><br>
							<label for="plugin-ds_db_table">
								<input type="radio" name="plugin-datasource" id="plugin-ds_db_table">
								Own database table
							</label><br>
							<label for="plugin-ds_ext_uri">
								<input type="radio" name="plugin-datasource" id="plugin-ds_ext_uri">
								External data source
							</label>
						</fieldset>
					</td>
				</tr>
				<!-- Columns -->
				<tr>
					<th scope="row">
						<label for="plugin-columns">Columns</label>
					</th>
					<td>
						<fieldset>
							<div id="columns_area" class="wp-pattern-example" style="width: 100%; max-width: 500px;">
								<p class="description">Enter as many columns you want. Both `key` and `label` fields are required.</p>
								<table style="width: 100%; max-width: 500px;">
									<thead>
										<tr>
											<th style="width: 40%;">Key</th>
											<th style="width: 40%;">Label</th>
											<th style="width: 20%;"> </th>
										</tr>
									</thead>
									<tbody>
										<!-- TODO Render existing actions here! -->
										<tr>
											<td><b>trash</b></td>
											<td>Trash</td>
											<td><input type="button" value="Remove" class="button-secondary"></td>
										</tr>
									</tbody>
									<tfoot>
										<tr>
											<td>
												<input type="text" name="plugin-new_columns_key" id="plugin-new_columns_key" class="regular-text" placeholder="Enter column key" style="width: 100%;">
											</td>
											<td>
												<input type="text" name="plugin-new_columns_label" id="plugin-new_columns_label" class="regular-text" placeholder="Enter column label" style="width: 100%;">
											</td>
											<td><input type="button" name="plugin-add_column" value="Add column" class="button-primary"></td>
										</tr>
									</tfoot>
								</table>
							</div>
						</fieldset>
					</td>
				</tr>
			</tbody>
		</table>
		<!-- TODO Add spinner and make this works via AJAX (with safe-fall to plain POST and PHP) -->
		<input type="submit" name="plugin-submit" value="Generate class" class="button-primary">
		<input type="submit" name="plugin-submit2" value="Test class" class="button">
	</form>

	<hr>

	<!-- TODO Here should be rendered generated PHP source -->
	<pre><code class="language-php">&lt;?php
/**
 * File description ...
 *
 * @package Name_Of_Package
 * @since 1.0
 */

if ( ! class_exists( 'My_Examples_List' ) ):

/**
 * Class description ...
 *
 * @see WP_List_Table
 * @since 1.0
 */
class My_Examples_List extends WP_List_Table {
	// ...
}

endif;

</code></pre>

</div><!-- .wrap -->